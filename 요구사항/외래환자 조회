💬 미션 [외래환자 조회 기능 구현]
✔ 조회항목 기본값 셋팅
  🔵화면 오픈시, 내원일자는 오늘일자로 default 셋팅한다.
  🔵화면 오픈시, 진료과List를  조회조건 진료과 combo에 셋팅하며, 사용자의 진료과를 기본으로 선택되게끔 처리한다. 
  🟡진료과 변경시, 진료과별 의사List를 셋팅한다.
  🔵진찰구분 -> 미진찰 default로 checked 처리한다.
  🔵예약시간 오전/오후 defaul로 checked 처리한다.
  🟡진료일자 미선택후 조회시, 선택된 날짜가 없습니다. 라는 경고메세지를 팝업한다. (메시지코드 EC11924)
  🔵미진찰 및 진찰 모두 미체크시, 미진찰, 진찰 구분을 선택하십시오. 라는 메시지를 팝업한다.  (메시지코드 EC03028)
  🟡진료여부 조회값5는 Y 또는 N 처리 및 모드 미체크시 조회시 전달 X
  🔵진료과 미선택시, 진료과를 선택하십시오 라는 메시지 팝업한다. (메시지코드 EC88005)
  🟡진료의 미선택시, 진료의를 선택하십시오. 라는 메시지 팝업한다. (메시지코드 EC08863)
  🔵오전, 오후 모두 미체크시, 오전, 오후 구분을 선택하십시오.라는 메시지를 팝업한다. (메시지코드 EC05886)

✔ 진료과 combo값 셋팅 (GS:외과, OS:정형외과 셋팅)
  🔵data dictionary에서  comments가 ‘조직Master I/F(MDM연계)’인 TABLE_NAME을 조회한다. 이하 A
  🔵data dictionary에서 TABLE_NAME이 a이며 comments가 약어부서코드인 COLUMN_NAME을 구한다. 이하 a
  🔵data dictionary에서 TABLE_NAME이 a이며 comments가 한글부서명인 COLUMN_NAME을 구한다. 이하 b
  🔵data dictionary에서 TABLE_NAME이 a이며 comments가 부서코드인 COLUMN_NAME을 구한다. 이하 c
  🔵진료과 combo의 명칭은 a+ ’ ’ + b값으로 셋팅한다. 
  🔵진료과 combo의 코드값은 c값으로 셋팅하며, 조회시 해당 c값을 전달한다. 
     ※ SRC > COMMON > MCOMPACK.bpl -> MCOM.pas > function GetDPRT_LIST 참조
        A 테이블 조회없이, 위 a,b,c 값을 참조하여 진료과 List combo 직접 구성

✔ 진료과별 의사List combo값 셋팅
  → 조회값1  (진료과코드:선택된 진료과 combo 코드값)
  → 조회 DataModule 추가 (provider, dataset, datasource)
  → interface, SvcImpl, Svc, SVO, BVO, DAO,query.xml, DO 추가
  🔵View ‘CCUSERAMV’ 이하 A 
  🔵data dictionary에서  comments가 ‘NEXMED-EHR 사용자 역할정보’인 TABLE_NAME을 조회한다. 이하 B
  🔵View A와 테이블 B를 조회한다.
  🔵A col comments ‘로그인ID’ column_name과 B col comments ‘로그인ID’ column_name과 Inner join 처리한다.
  🔵B col comments ‘ 진료부서코드’ column_name  = 조회값1 조회조건을 추가한다.
  🔵A.OCFM_CD값이 ‘HAA’인 조회조건 추가한다.
  🔵A. USER_STTS_CD값이 ‘4’,’9’가 아닐때 조건을 추가한다.
  🔵A. LGIN_ID값이 ‘K’로 시작하지 않을때 조건을 추가한다.
  🔵A. LGIN_ID값이 ‘R’로 시작하지 않을때 조건을 추가한다.
  🔵현재일자가 B col comments ‘적용시작일자’ column_name값 -1과 B col comments ‘적용종료일자’ column_name값 + 1 사이일때 조건을 추가한다.
  🔵sorting은  B col comments ‘사용자ID’ 컬럼값으로 올림차순 정렬한다.
  🔵조회값은 b col comments ‘사용자ID’ column_name과 b col comments ‘사용자명’ column_name을 조회하여, 해당 combo List에 셋팅한다.
  🟡combo 아래 속성 참조
      → properties -> ListSource, ListFieldNames, KeyFieldNames 


✔ 진료의별 외래환자 조회
  → 조회값1(진료일자), 조회값2  (진료과), 조회값3(진료의), 조회값4(센터코드:M), 조회값5(진료여부), 조회값6(2차진료여부), 조회값7(기타진료여부), 조회값8(오전오후구분), 조회값9(전체구분)
  → 조회 DataModule 추가 (provider, dataset, datasource)
  → interface, SvcImpl, Svc, SVO, query.xml, DAO, DO, BVO추가

  🔵data dictionary에서  comments가 ‘진료접수’인 TABLE_NAME을 조회한다. 이하 A
  🔵data dictionary에서  comments가 ‘환자’인 TABLE_NAME을 조회한다. 이하 B
  🔵A col comments ‘환자번호’ column_name과 B col comments ‘환자번호’ column_name과 Inner join 처리한다.
  🔵A col comments ‘ 진료일자’ column_name  = 조회값1 조회조건을 추가한다.
  🔵A col comments ‘진료과코드’ column_name  = 조회값2 조회조건을 추가한다.
  🔵A col comments ‘진료의사’ column_name  = 조회값3 조회조건을 추가한다.
  🔵A col comments ‘진료센터코드’ column_name  = 조회값4 조회조건을 추가한다.
  🔵A col comments ‘진료여부’ column_name  = 조회값5 조회조건을 추가한다 (진찰, 미진찰)
  🔵2차진료여부 미체크시, A col comments ‘진료예약구분코드’ column_name이, null일때 ‘ ‘ 처리된값이 ‘8’이 아닐때 조건을  추가한다.
  🔵기타여부 미체크시, A col comments ‘진료예약구분코드’ column_name이, null일때 ‘ ‘ 처리된값이 ‘9’, ‘A’, ‘X’를 포함하지 않을때 조건을  추가한다.
  🔵오전체크시, A col comments ‘진료일시’ column_name의 시간 4자리 값이 13시보다 작을때 조회조건 추가
  🔵오후체크시, A col comments ‘진료일시’ column_name의 시간 4자리 값이 13시보다 크거나 같을때 조회조건 추가
  🔵A col comments ‘내원구분’ column_name 값 = ‘O’ 조회조건 추가 
  🔵A col comments ‘취소일시’ column_name 값이 null 일때 조회조건 추가
  🔵A col comments ‘진찰료수납코드’ column_name 값이 null 일때 ‘N’ 처리된 값이 ‘R’값과 같지 않을때 조회조건 추가
  🔵A col comments ‘진료예약구분코드’ column_name 값이 null 일때 ‘N’ 처리된 값이 ‘7’, ‘C’를 포함하지않을때 조회조건 추가

  🟡순번 : dataset에 ADD_SQNC 컬럼을 추가하여 해당 컬럼값에 순번을 셋팅하여 표시
            ※ 반복문과 임시변수를 사용하여 순번값 셋팅 
  🟢당일접수시간 :  case when 적용
       A col comments ‘ 진료예약신청일자’ column_name 값이 A col comments ‘ 진료일자’ column_name값과 같으면   A col comments ‘ 진료예약신청일자’ column_name 값을 'hh24:mi’ 형태로 다르면 null값 조회
  🔵환자번호 : A col comments ‘ 환자번호’ column_name값을 조회하여 매핑 
  🔵환자명 : B col comments ‘ 환자명’ column_name값을 조회하여 매핑
  🟢S/A : 
       - B col comments ‘ 성별’ column_name값을 조회한다.  이하 x
       - B col comments ‘생년월일’ column_name값을 ‘yyyymmdd’의 char값으로  조회한다. 이하 y
       - S/A 표현값은 x + ‘/’ + func Calc_Age_MD(y..) 결과값으로 display한다.
         ※ SRC > COMMON > MCOMPACK.bpl -> MCOM.pas > func Calc_Age_MD 참조
              관련 tataset에 신규 컬럼을 추가하여 해당 표현값을 셋팅한 후 S/A와 매핑
  🟢생년월일 :     
      B col comments ‘생년월일’ column_name값을 ‘yyyymmdd’의 char값으로  조회하여 매핑한다.
      아래 속성을 이용하여 ‘yyyy-mm-dd’ 형태로 display한다.
      (Properties -> DataKind, DataString -> Format,Kind)
  🔵센터 : 스칼라 서브 쿼리를 이용하여 MCCN_NM alias로 조회한다.
     - data dictionary에서  comments가 ‘조직Master I/F(MDM연계)’인 TABLE_NAME을 조회한다. 이하 f_a
     - f_a col comments ‘부서코드’ column_name값 = A col comments ‘진료센터코드’ ’ column_name 값 조건을 추가한다.
     - rownum < 2 조건을 추가한다.
     - f_a col comments ‘ 한글부서명’ column_name으로 group 처리한다.
     - f_a col comments ‘ 한글부서명’ column_name값을 최종 조회한다.
  🔵진료과 : 스칼라 서브 쿼리를 이용하여 ABRV_MCDP_CD alias로 조회한다.
    - data dictionary에서  comments가 ‘조직Master I/F(MDM연계)’인 TABLE_NAME을 조회한다. 이하 f_a
    - f_a col comments ‘부서코드’ column_name값 = A col comments ‘진료과코드’ ’ column_name 값 조건을 추가한다.
    - f_a col comments ‘약어부서코드’ column_name값을 최종 조회한다.
  🔵진료의 : 스칼라 서브 쿼리를 이용하여 MDDR_NM alias로 조회한다.
    - data dictionary에서  comments가 ‘NEXMED-EHR 사용자 역할정보’인 TABLE_NAME을 조회한다. 이하 f_a
    -  f_a col comments ‘사용자ID’ column_name값 = A col comments ‘진료의사ID’ ’ column_name 값 조건을 추가한다. 
    - f_a col comments ‘ 사용자명’ column_name값을 최종 조회한다.
  🔵초재진 :  스칼라 서브 쿼리를 이용하여 FVDV_NM alias로 조회한다.
    - data dictionary에서  comments가 ‘공통코드값’인 TABLE_NAME을 조회한다. 이하 f_a
    - f_a col comments ‘공통그룹코드’ column_name값 = 'AP019’ 조건을 추가한다. 
    - f_a col comments ‘공통세부코드’ column_name값 = A col comments ‘초재진구분코드 ’ column_name 값 조건을 추가한다. 
    - f_a col comments ‘ 상세코드명’ column_name값을 최종 조회한다.
  🔵접수번호 : A col comments ‘진료접수번호’를 조회한다. 
